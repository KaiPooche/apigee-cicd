name: Apigee CI with Maven

on:
  workflow_dispatch:

    inputs:
      Deployment Env:
        # Friendly description to be shown in the UI instead of 'name'
        description: 'Environment to deploy'
        # Default value if no value is explicitly provided
        default: 'Dev'
        # Input has to be provided for the workflow to run
        required: true
        # The data type of the input
        type: string
      Deployment Org:
        # Friendly description to be shown in the UI instead of 'name'
        description: 'Org to deploy'
        # Default value if no value is explicitly provided
        default: 'Dev'
        # Input has to be provided for the workflow to run
        required: false
        # The data type of the input
        type: string
  
env:


  # Default Target Apigee Organization et environment (can be also be dynamically defined in [Set Variables *] steps)
  DEFAULT_APIGEE_ORG: centering-river-396816
  DEFAULT_APIGEE_ENV: Dev
  

  # Retrieve GPC Workload Identity Provider and Service account from repository settings (secrets)
  WORKLOAD_IDENTITY_PROVIDER: ${{ secrets.WORKLOAD_IDENTITY_PROVIDER }}
  SERVICE_ACCOUNT: ${{ secrets.SERVICE_ACCOUNT }}


  
jobs:
  Apigee-Deploy:
    
    runs-on: ubuntu-latest

    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
      - uses: actions/checkout@v3

      - name: 'Authenticate to Google Cloud'
        uses: 'google-github-actions/auth@v1'
        with:
            workload_identity_provider: 'projects/136304058176/locations/global/workloadIdentityPools/my-pool/providers/my-provider'
            service_account: 'my-service-account@centering-river-396816.iam.gserviceaccount.com'
            token_format: 'access_token'
            access_token_lifetime: '300s'

  # Create Dependencies (npm) Cache 
      - name: Cache node modules
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` 
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-


  # Install dependencies (npm)
      - name: Install Dependencies
        run: npm install --silent --no-fund


  # Run apigeeLint test + upload artifact (apigeelint-out.html)
      - name: apigeelint
        run:  ./node_modules/apigeelint/cli.js -s ./apiproxy -f codeframe.js -e PO013,PO025 > ./apigeelint-out.html

      - name: Archive Apigeelint results
        uses: actions/upload-artifact@v3
        with:
          name: apigeelint-report
          path: ./apigeelint-out.html
          retention-days: 5


 

  # Setup Maven & Maven Cache
      - name: Set up JDK 1.11
        uses: actions/setup-java@v3
        with:
          distribution: 'corretto' 
          java-version: 11

      - name: Cache the Maven packages to speed up build
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2   


  



  # Deploy Apigee Config (Apigee [Config] Maven plugin)
      
     # - name: mvn deploy config
      #  run:  mvn install -q -P$APIGEE_ENV -Dapigee.org=$APIGEE_ORG -Denv=$APIGEE_ENV -Dsa=sa.json -Dapigee.config.file=./EdgeConfig/edge.json -Dapigee.config.options=update


  # Package & Deploy Apigee proxy (Apigee [Deploy] Maven plugin)
      - name: mvn package
        run: mvn process-resource

     # - name: mvn config
      #  run: mvn apigee-enterprise:configure -q -P$API_VERSION -Denv=$APIGEE_ENV  -Ddeployment.suffix=$APIGEE_DEPLOYMENT_SUFFIX 

      - name: mvn deploy proxy apigee
        run: mvn -f "$GITHUB_WORKSPACE"/hr-api/pom.xml install -P eval  -Dbearer='${{ steps.auth.outputs.access_token }}' -Dapigee.config.options=update



 
